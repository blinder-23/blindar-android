pluginManagement {
    repositories {
        gradlePluginPortal()
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
}
dependencyResolutionManagement {
    repositories {
        google()
        mavenCentral()
    }
    versionCatalogs {
        libs {
            version('hsk-ktx-version', '1.0-beta07')
            version('violet-dreams-version', '0.1.2')
            library('hsk-ktx', 'com.github.mwy3055', 'hsk-ktx').versionRef('hsk-ktx-version')
            library('violet-dreams-core', 'com.github.mwy3055.violet-dreams', 'violet-dreams-core').versionRef('violet-dreams-version')
            library('violet-dreams-ui', 'com.github.mwy3055.violet-dreams', 'violet-dreams-ui').versionRef('violet-dreams-version')

            library('accompanist-placeholder-material', 'com.google.accompanist:accompanist-placeholder-material:0.23.1')
            library('accompanist-systemuicontroller', 'com.google.accompanist:accompanist-systemuicontroller:0.23.1')
            library('accompanist-drawablepainter', 'com.google.accompanist:accompanist-drawablepainter:0.25.1')
            library('accompanist-pager', 'com.google.accompanist:accompanist-pager:0.23.1')
            bundle('accompanist', ['accompanist-placeholder-material', 'accompanist-systemuicontroller', 'accompanist-drawablepainter', 'accompanist-pager'])
        }
        androidXLibs {
            // Sole KTX libraries
            library('core-ktx', 'androidx.core:core-ktx:1.9.0')
            library('collection-ktx', 'androidx.collection:collection-ktx:1.2.0')
            library('palette-ktx', 'androidx.palette:palette-ktx:1.0.0')

            version('lifecycle', '2.5.1')
            library('lifecycle-runtime-ktx', 'androidx.lifecycle', 'lifecycle-runtime-ktx').versionRef('lifecycle')
            library('lifecycle-viewmodel-ktx', 'androidx.lifecycle', 'lifecycle-viewmodel-ktx').versionRef('lifecycle')
            library('lifecycle-reactivestreams-ktx', 'androidx.lifecycle', 'lifecycle-reactivestreams-ktx').versionRef('lifecycle')
            library('lifecycle-extensions', 'androidx.lifecycle:lifecycle-extensions:2.2.0')
            bundle('lifecycle', ['lifecycle-runtime-ktx', 'lifecycle-viewmodel-ktx', 'lifecycle-reactivestreams-ktx', 'lifecycle-extensions'])

            version('work', '2.7.1')
            library('work-runtime-ktx', 'androidx.work', 'work-runtime-ktx').versionRef('work')
            library('work-testing', 'androidx.work', 'work-testing').versionRef('work')
            library('hilt-work', 'androidx.hilt:hilt-work:1.0.0')

            version('hilt', '2.44')
            library('hilt-android', 'com.google.dagger', 'hilt-android').versionRef('hilt')
            library('hilt-compiler', 'com.google.dagger', 'hilt-compiler').versionRef('hilt')
            library('hilt-compiler-androidx', 'androidx.hilt:hilt-compiler:1.0.0')

            // Other AndroidX Libraries
            library('core-splashscreen', 'androidx.core:core-splashscreen:1.0.0')
            library('profileinstaller', 'androidx.profileinstaller:profileinstaller:1.2.0')
            library('datastore-preferences', 'androidx.datastore:datastore-preferences:1.0.0')
            library('startup-runtime', 'androidx.startup:startup-runtime:1.1.1')

            // Compose extension libraries
            library('lifecycle-viewmodel-compose', 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.0-alpha03')
            library('hilt-navigation-compose', 'androidx.hilt:hilt-navigation-compose:1.0.0')
            library('paging-compose', 'androidx.paging:paging-compose:1.0.0-alpha17')
        }
        composeLibs {
            version('compiler', '1.3.2')
            library('bom', 'androidx.compose', 'compose-bom').version('2022.11.00')
        }
        kotlinLibs {
            version('collections-immutable-version', '0.3.5')
            library('collections-immutable', 'org.jetbrains.kotlinx', 'kotlinx-collections-immutable').versionRef('collections-immutable-version')

            version('coroutines', '1.6.4')
            library('coroutines-core', 'org.jetbrains.kotlinx', 'kotlinx-coroutines-core').versionRef('coroutines')
            library('coroutines-android', 'org.jetbrains.kotlinx', 'kotlinx-coroutines-android').versionRef('coroutines')
            library('coroutines-test', 'org.jetbrains.kotlinx', 'kotlinx-coroutines-test').versionRef('coroutines')
            bundle('coroutines', ['coroutines-core', 'coroutines-android'])
        }
        testLibs {
            version('junit5', '5.9.1')
            library('junit-jupiter-api', 'org.junit.jupiter', 'junit-jupiter-api').versionRef('junit5')
            library('junit-jupiter-engine', 'org.junit.jupiter', 'junit-jupiter-engine').versionRef('junit5')
            library('junit-vintage-engine', 'org.junit.jupiter', 'junit-vintage-engine').versionRef('junit5')
            library('assertj', 'org.assertj', 'assertj-core').version('3.23.1')
            library('orchestrator', 'androidx.test', 'orchestrator').version('1.4.2')
        }
        instTestLibs {
            library('junit', 'android.test.ext', 'junit').version('1.1.4')
            library('espresso-core', 'androidx.test.espresso', 'espresso-core').version('3.5.0')
        }
    }
}
rootProject.name = "Hanbit lunch"
include ':app'
include ':database'
include ':database:di'
include ':preferences'
include ':domain'
include ':domain:di'
include ':benchmark'
include ':server'
include ':server:di'
include ':work'
